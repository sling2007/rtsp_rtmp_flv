#user  nobody;
worker_processes  auto;
 
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
 
#pid        logs/nginx.pid;
 
 
events {
    worker_connections  1024;
}
 


rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /tmp;

 
rtmp {
    out_queue           4096;
    out_cork            8;
    max_streams         128;
    timeout             15s;
    drop_idle_publisher 15s;

    log_interval 5s;    #log模块在access.log中记录日志的间隔时间，对调试非常有用
    log_size     1m;    #log模块用来记录日志的缓冲区大小

	server {
                listen 1935 reuseport;
                chunk_size 4096;

                application myapp {
                        live on;
                        meta off;	#为了兼容flvj.js
                        gop_cache off;	#打开GOP缓存，减少首屏等待时间,但增加了正常播放时候的延迟
                        record off;
                        allow play all;

                        hls off;
                        hls_path /tmp/hls;
                        hls_fragment 4;
                        hls_playlist_length 30;
                }
        }


#    server {
#        listen 1935;
#        server_name 127.0.0.1 localhost;
#        application myapp {
#            live on;
#            gop_cache off;	#打开GOP缓存，减少首屏等待时间,但增加了正常播放时候的延迟
#            meta off;		#为了兼容flvj.js
#            record off;
#            allow play all;
#        }
#        application hls {
#            live on;
#            hls on;
#            hls_fragment 25s;
#            hls_path ../temp/hls;
#        }
#    }

}


 
 
http {
    include       mime.types;
    default_type  application/octet-stream;
 
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
 
    #access_log  logs/access.log  main;
 
    sendfile        on;
    #tcp_nopush     on;
 
    #keepalive_timeout  0;
    keepalive_timeout  65;
 
    #gzip  on;
 
    server {
        listen       80;
    	listen       443 ssl;

        server_name  localhost;


	ssl_certificate /usr/local/nginx/conf/cert/server.crt; 
	ssl_certificate_key /usr/local/nginx/conf/cert/server.key;
    	ssl_session_timeout 5m;
    	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    	ssl_prefer_server_ciphers on;


 
        #charset koi8-r;
 
        #access_log  logs/host.access.log  main;
 
        location / {
            root   html;
            index  index.html index.htm;
        }
        location /hls{
            add_header Access-Control-Allow-Origin *;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            alias /tmp/hls;
            expires -1;
        }
        location /flv {
                flv_live on;
                chunked_transfer_encoding on;                         #支持'Transfer-Encoding: chunked'方式回复
                add_header 'Access-Control-Allow-Origin' '*';         #添加额外的 HTTP 头
                add_header 'Access-Control-Allow-Credentials' 'true'; #添加额外的 HTTP 头
        }
 
        #error_page  404              /404.html;
 
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
 
}
 
 
